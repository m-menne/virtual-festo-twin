/*
 * Empty C++ Application
 */
#include <cstdlib>

#include "digital_out.h"
#include "digital_in.h"
#include "analog_out.h"
#include "analog_in.h"


void memory_update(uint32_t* digital_in_a, uint32_t* analog_in_a, uint32_t* digital_out_a, uint32_t* analog_out_a, uint32_t analog_out_status_a){

	uint32_t* bram_ptr = ((uint32_t*)(0x42000000));

	uint32_t analog_in_start = 0x0;
	uint32_t digital_out_start = 0x0;
	uint32_t analog_out_start = 0x0;
	uint32_t analog_out_status_pos = 0x0;

	// Write measured data from the board into the memory of the OS
	for(int index = 0; index < 8; ++index){
		bram_ptr[index] = digital_in_a[index]; // Digital Data
		bram_ptr[index+analog_in_start] = analog_in_a[index];
	}

	// Write data from the memory of the OS into the output arrays
	for(int index = 0; index < 8; ++index){
		digital_out_a[index] = bram_ptr[index+digital_out_start];
	}

	for(int index = 0; index < 4; ++index){
		analog_out_a[index] = bram_ptr[index+analog_out_start];
	}

	analog_out_status_a = bram_ptr[analog_out_status_pos];
}

int main() {

	init_digital_outputs();
	init_digital_inputs();
	init_analog_outputs();
	init_analog_inputs();

	uint32_t temp = 0;

	// Richtige Array-Größen
	uint32_t digital_in;
	uint32_t analog_in[8] = { 0 };
	uint32_t digital_out[8] = { 0 };
	uint32_t analog_out[4] = { 0x5F3A, 0xF3A5, 0x3A5F, 0xA5F3 };
	uint32_t analog_out_status = 0;


	while(true) {
//		for(uint32_t idx1 = 0; idx1 < UINT8_MAX; ++idx1) {
//			write_digital_outputs(idx1);
//			for(uint32_t idx2 = 0; idx2 < 500000; ++idx2);
//			temp = read_data();
//		}


		// Read Data
		digital_in = read_data();
		read_analog_inputs(analog_in);

		// Update data
		memory_update(digital_in, analog_in, digital_out, analog_out, analog_out_status);

		// Write Data
		write_digital_outputs(digital_out);
		if(analog_out_status){
			write_analog_outputs(analog_out);
			// analog_out_status zurücksetzen
		}


		// Wartezyklus
	}

	return EXIT_SUCCESS;
}

